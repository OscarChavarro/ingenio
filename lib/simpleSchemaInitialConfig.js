SimpleSchema.messages({
  required: "[label] es necesario",
  minString: "[label] debe tener al menos [min] caracteres",
  maxString: "[label] no puede exceder [max] caracteres",
  minNumber: "[label] debe tener al menos [min] caracteres",
  maxNumber: "[label] no puede exceder [max] caracteres",
  minDate: "[label] debe ser igual o después de [min]",
  maxDate: "[label] no puede ser después de [max]",
  badDate: "[label] no es una fecha válida",
  minCount: "Debe especificar al menos [minCount] opciones",
  maxCount: "No puede especificar más de [maxCount] opciones",
  noDecimal: "[label] debe ser un número entero",
  notAllowed: "[value] no es un valor válido",
  expectedString: "[label] debe ser texto",
  expectedNumber: "[label] debe ser un número",
  expectedBoolean: "[label] debe ser booleano",
  expectedArray: "[label] debe ser un arreglo",
  expectedObject: "[label] debe ser un objeto",
  expectedConstructor: "[label] debe ser de tipo [type]",
  regEx: [
    { msg: "[label] falló la validación de la expresión regular" },
    { exp: SimpleSchema.RegEx.Email, msg: "[label] debe ser un correo electrónico válido" },
    { exp: SimpleSchema.RegEx.WeakEmail, msg: "[label] debe ser un correo electrónico válido" },
    { exp: SimpleSchema.RegEx.Domain, msg: "[label] debe ser un dominio válido" },
    { exp: SimpleSchema.RegEx.WeakDomain, msg: "[label] debe ser un dominio válido" },
    { exp: SimpleSchema.RegEx.IP, msg: "[label] debe ser una dirección IPv4 o IPv6 válida" },
    { exp: SimpleSchema.RegEx.IPv4, msg: "[label] debe ser una dirección IPv4 válida" },
    { exp: SimpleSchema.RegEx.IPv6, msg: "[label] debe ser una dirección IPv6 válida" },
    { exp: SimpleSchema.RegEx.Url, msg: "[label] debe ser una URL válida" },
    { exp: SimpleSchema.RegEx.Id, msg: "[label] debe ser un ID alfanumérico válido" }
  ],
  keyNotInSchema: "[key] no está permitido en el esquema"
});